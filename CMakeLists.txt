
cmake_minimum_required (VERSION 2.6)
PROJECT(MUIRRTI)

# Get package version information from git
execute_process( COMMAND "git" "describe"
                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
                 RESULT_VARIABLE GIT_OUTPUT_VALUE
                 OUTPUT_VARIABLE CURRENT_GIT_VERSION
                 OUTPUT_STRIP_TRAILING_WHITESPACE )
if(GIT_OUTPUT_VALUE EQUAL 0)
   message(STATUS "Building git version ${CURRENT_GIT_VERSION}")
endif(GIT_OUTPUT_VALUE EQUAL 0)
set(PACKAGE_VERSION ${CURRENT_GIT_VERSION})

# See if XXD exists
execute_process( COMMAND "xxd" "-v"
                 WORKING_DIRECTORY ${CMAKE_CURRENT_SOURCE_DIR}
                 RESULT_VARIABLE XXD_OUTPUT_VALUE
                 ERROR_VARIABLE XXD_VERSION
                 ERROR_STRIP_TRAILING_WHITESPACE )
if(XXD_OUTPUT_VALUE EQUAL 0)
   message(STATUS "XXD_VERSION: ${XXD_VERSION}")
   set(TEXTINCLUDES TRUE)
endif(XXD_OUTPUT_VALUE EQUAL 0)


SET(CMAKE_MODULE_PATH ${PROJECT_SOURCE_DIR}/CMake.local)

IF(APPLE)
   SET(LINK_STATIC "")
ELSE()
#   SET(LINK_STATIC "-static")
#   SET(CMAKE_EXE_LINKER_FLAGS "-static-libgcc -static-libstdc++")
ENDIF()

FIND_PACKAGE(HDF5 COMPONENTS C CXX HL REQUIRED)
SET(Boost_ADDITIONAL_VERSIONS "1.45.0 1.45")
SET(Boost_USE_STATIC_LIBS OFF)
FIND_PACKAGE(Boost COMPONENTS date_time system filesystem thread REQUIRED)
FIND_PACKAGE(PkgConfig)
FIND_PACKAGE(OpenGL REQUIRED)
FIND_PACKAGE(GLUT REQUIRED)
FIND_PACKAGE(ZLIB)
FIND_PACKAGE(OpenMP)
FIND_PACKAGE(OpenCL)
FIND_PACKAGE(CUDA)

SET(FFTW_HOME $ENV{FFTW_HOME})
FIND_PACKAGE(FFTW)

CONFIGURE_FILE(${CMAKE_CURRENT_SOURCE_DIR}/muir-config.h.in ${CMAKE_CURRENT_BINARY_DIR}/muir-config.h)

SUBDIRS(src gd-2.0.35)

#SET( CMAKE_CXX_FLAGS "-ggdb -Wall -Wextra -Wconversion -Weffc++ ${OpenMP_CXX_FLAGS}")
SET( CMAKE_CXX_FLAGS "-O3 -ggdb -Wall -Wextra ${OpenMP_CXX_FLAGS}")
